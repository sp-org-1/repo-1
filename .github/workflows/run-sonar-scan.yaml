name: Run-Sonarscan

on:
  workflow_dispatch:
jobs:
  sonarqube:
    name: SonarQube
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      #- name: SonarQube Scan
      #  uses: SonarSource/sonarqube-scan-action@v5
      #  env:
      #    SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      - name: Get Scan Results
        run: |
          python scripts/get-scan-results.py ${{ secrets.SONAR_TOKEN }}
          #jsonoutput=`curl -u ${{ secrets.SONAR_TOKEN }}: "https://sonarcloud.io/api/issues/search?organization=sp-org-1&projects=sp-org-1_repo-1" | jq -c '[ .issues[] | select(.issueStatus == "OPEN") ]'`
          #output=`curl -u ${{ secrets.SONAR_TOKEN }}: "https://sonarcloud.io/api/issues/search?organization=sp-org-1&projects=sp-org-1_repo-1" | jq -c '.issues[] | select(.issueStatus == "OPEN")'`
          #echo $output
          # Get component
          #for filename in `echo $jsonoutput | jq .[].component | cut -d ':' -f 2  | tr -d '"'`; do
          #  echo $filename
          #  cat $filename
          #done
          
